// import {
//   Chart as ChartJS,
//   CategoryScale,
//   LinearScale,
//   BarElement,
//   Title,
//   Tooltip,
//   Legend,
//   ArcElement,
// } from "chart.js"; 

// Register the components to Chart.js
// ChartJS.register(
//   CategoryScale,
//   LinearScale,
//   BarElement,
//   Title,
//   Tooltip,
//   Legend,
//   ArcElement
// );

// const setSalesData = (orders: Order[]) => {
  //     const salesByStore: {
  //         [key: string]: { dineIn: number; takeOut: number };
  //     } = {};

  //     orders.forEach((order) => {
  //         const storeId = order.store_id.toString();
  //         const amount = parseFloat(order.total_amount);

  //         if (!salesByStore[storeId]) {
  //             salesByStore[storeId] = { dineIn: 0, takeOut: 0 };
  //         }

  //         if (order.order_type === "Dine In") {
  //             salesByStore[storeId].dineIn += amount;
  //         } else if (order.order_type === "Take Out") {
  //             salesByStore[storeId].takeOut += amount;
  //         }
  //     });

  //     return salesByStore;
  // };


// const pieChart = {
  //     labels: ["Dine In", "Take Out"],
  //     datasets: [
  //         {
  //             label: "Sales by Store",
  //             data: [
  //                 // Sum of Dine In and Take Out sales for each store
  //                 Object.values(saleType).reduce(
  //                     (acc, sales: any) => acc + sales.dineIn,
  //                     0
  //                 ),
  //                 Object.values(saleType).reduce(
  //                     (acc, sales: any) => acc + sales.takeOut,
  //                     0
  //                 ),
  //             ],
  //             backgroundColor: [
  //                 "rgba(75, 192, 192, 0.2)", // Dine In color
  //                 "rgba(255, 99, 132, 0.2)", // Take Out color (You can customize this color)
  //             ],
  //             borderColor: [
  //                 "rgba(75, 192, 192, 1)", // Dine In border color
  //                 "rgba(255, 99, 132, 1)", // Take Out border color
  //             ],
  //             borderWidth: 1,
  //         },
  //     ],
  // };

  {/* <div className="main__header flex justify-between items-center">
                    <h1 className="main__title text-3xl uppercase">
                        Dashboard
                    </h1>
                </div>

                <hr className="border border-amber-600 my-3" /> */}

        {/* <div className="control-box flex items-start space-x-4 mb-4">
                    
                    <div className="year-selector">
                        <label htmlFor="year" className="mr-2">
                            Year
                        </label>
                        <select
                            id="year"
                            value={year}
                            onChange={(e) => setYear(e.target.value)}
                            className="select select-bordered"
                        >
                            <option value="2024">2024</option>
                            <option value="2023">2023</option>
                            <option value="2022">2022</option>
                        </select>
                    </div>

                    {storeID ? (
                        <div className="store-selector">
                            <label htmlFor="store" className="mr-2">
                                Store
                            </label>
                            <select
                                id="store"
                                value={store}
                                onChange={(e) => setStore(e.target.value)}
                                className="select select-bordered"
                            >
                                <option value="All">All</option>
                                {stores.map((store: any) => (
                                    <option
                                        key={store.store_id}
                                        value={store.store_id}
                                    >
                                        {store.store_name}
                                    </option>
                                ))}
                            </select>
                        </div>
                    ) : (
                        ""
                    )}
                </div>

                <div className="stats shadow mb-4 w-full text-white">
                    <div className="stat bg-white">
                        <div className="stat-figure text-[#3d2a21]">
                            <svg
                                xmlns="http://www.w3.org/2000/svg"
                                fill="none"
                                viewBox="0 0 24 24"
                                className="inline-block h-8 w-8 stroke-current"
                            >
                                <path
                                    strokeLinecap="round"
                                    strokeLinejoin="round"
                                    strokeWidth="2"
                                    d="M6 12l6-6 6 6"
                                ></path>
                            </svg>
                        </div>
                        <div className="stat-title text-[#3d2a21]">
                            Total Product Sold
                        </div>
                        <div className="stat-value text-[#3d2a21]">
                            {salesCount}
                        </div>
                        <div className="stat-desc text-[#3d2a21]">
                            Items sold
                        </div>
                    </div>

                    <div className="stat bg-white">
                        <div className="stat-figure text-[#5d422b]">
                            <svg
                                xmlns="http://www.w3.org/2000/svg"
                                fill="none"
                                viewBox="0 0 24 24"
                                className="inline-block h-8 w-8 stroke-current"
                            >
                                <path
                                    strokeLinecap="round"
                                    strokeLinejoin="round"
                                    strokeWidth="2"
                                    d="M12 9V3l-7 9h7v7l9-11h-7z"
                                ></path>
                            </svg>
                        </div>
                        <div className="stat-title text-[#5d422b]">
                            Total Products
                        </div>
                        <div className="stat-value text-[#5d422b]">
                            {productsCount}
                        </div>
                        <div className="stat-desc text-[#5d422b]">
                            Available products
                        </div>
                    </div>

                    <div className="stat bg-white">
                        <div className="stat-figure text-[#644e43]">
                            <svg
                                xmlns="http://www.w3.org/2000/svg"
                                fill="none"
                                viewBox="0 0 24 24"
                                className="inline-block h-8 w-8 stroke-current"
                            >
                                <path
                                    strokeLinecap="round"
                                    strokeLinejoin="round"
                                    strokeWidth="2"
                                    d="M4 6h16M4 12h16m-7 6h7"
                                ></path>
                            </svg>
                        </div>
                        <div className="stat-title text-[#644e43]">
                            Total Sales Amount
                        </div>
                        <div className="stat-value text-[#644e43]">
                            Php {totalSales.toLocaleString()}
                        </div>
                        <div className="stat-desc text-[#644e43]">
                            Total revenue
                        </div>
                    </div>

                    <div className="stat bg-white">
                        <div className="stat-figure text-[#442a13]">
                            <svg
                                xmlns="http://www.w3.org/2000/svg"
                                fill="none"
                                viewBox="0 0 24 24"
                                className="inline-block h-8 w-8 stroke-current"
                            >
                                <path
                                    strokeLinecap="round"
                                    strokeLinejoin="round"
                                    strokeWidth="2"
                                    d="M12 4v16m8-8H4"
                                ></path>
                            </svg>
                        </div>
                        <div className="stat-title text-[#442a13]">
                            Total Categories
                        </div>
                        <div className="stat-value text-[#442a13]">
                            {categoryCount}
                        </div>
                        <div className="stat-desc text-[#442a13]">
                            Number of product categories
                        </div>
                    </div>
                </div>
                <div className="flex gap-2 mb-4 p-3 shadow flex-col">
                   
                    <h1 className="title text-2xl text-center text-amber-950 mb-5">
                        Annual Sales
                    </h1>
                    <AnnualSalesChart storeId={store} />
                </div>
                <div className="flex gap-2 mb-4 p-3 shadow flex-col">
                   
                    <h1 className="title text-2xl text-center text-amber-950 mb-5">
                        Sales by Products
                    </h1>

                    <div className="overflow-auto w-full max-h-96 border border-gray-300 rounded-md shadow-md">
                        <table className="w-full table-auto">
                            <thead className="bg-amber-600 text-white sticky top-0 z-10">
                                <tr>
                                    <th className="px-4 py-2 text-left">#</th>
                                    <th className="px-4 py-2 text-left">
                                        Product Name
                                    </th>
                                    <th className="px-4 py-2 text-left">
                                        Category
                                    </th>
                                    <th className="px-4 py-2 text-left">
                                        Quantity Sold
                                    </th>
                                    <th className="px-4 py-2 text-left">
                                        Subtotal
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                {topSold.map((item: any, index: number) => (
                                    <tr
                                        key={item.product_id}
                                        className="border-b hover:bg-gray-100"
                                    >
                                        <td className="px-4 py-2">
                                            {index + 1}
                                        </td>
                                        <td className="px-4 py-2">
                                            {item.product_name}
                                        </td>
                                        <td className="px-4 py-2">
                                            {item.category_name}
                                        </td>
                                        <td className="px-4 py-2">
                                            {item.total_quantity}
                                        </td>
                                        <td className="px-4 py-2">
                                            Php{" "}
                                            {Number(item.total_sales).toFixed(
                                                2
                                            )}
                                        </td>
                                    </tr>
                                ))}
                            </tbody>
                        </table>
                    </div>
                </div>
                <div className="flex gap-2 mb-4 p-3 shadow flex-col">
                    <div className="chart-container w-[100%] border border-amber-600 p-3 rounded-md">
                        <h1 className="text-2xl mb-5 title text-center">
                            Monthly Sales
                        </h1>
                        <Bar data={chartData} options={options} />
                    </div>
                    {localStorage.getItem("role") !== "owner" && (
                        <div className="chart-container w-[100%] border border-amber-600 p-3 rounded-md">
                            <h1 className="text-2xl mb-5 title text-center">
                                Peak Hours
                            </h1>
                            <SalesLineChart year={year} store_id={store} />
                        </div>
                    )}
                </div>
                {localStorage.getItem("role") !== "owner" && (
                    <div className="flex">
                        <Recommendation
                            sales={orders}
                            total_sales={totalSales}
                            sales_count={salesCount}
                        />
                    </div>
                )}

                <div className="flex gap-2 mb-4 p-3 shadow flex-col">
                    <h1 className="text-2xl mb-5 title text-center">
                        Monthly Growth Rate
                    </h1>
                    <PercentagePerMonth data={updateMonthsWithPercentages()} />
                </div> */}

        {/* {localStorage.getItem("role") !== "owner" && (
          <div className="flex">
            <Recommendation
              sales={orders}
              total_sales={totalSales}
              sales_count={salesCount}
            />
          </div>
        )} */}